meta {
  name: Get Todays top picks
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/todays_top_picks
  body: none
  auth: none
}

assert {
  res.status: eq 200
  res.body.data: length 50
  res.body.data[0].id: isString
  res.body.data[0].attributes: isJson
  res.body.data[0].attributes.position: isNumber
  res.body.data[0].relationships: isJson
  res.body.data[0].relationships.featurable: isJson
  res.body.data[0].relationships.featurable.data: isJson
  res.body.data[0].relationships.featurable.data.id: isString
  res.body.data[0].relationships.featurable.data.type: isString

  res.body.included.length: gte 50
}

tests {
  test("For each featured id there is a corresponding object under the path `included`", () => {
      const featured_ids = res.body.data.map(item => item.relationships.featurable.data.id)
      const included_ids = res.body.included.map(item => item.id)
      expect(included_ids).to.include.members(featured_ids)
  })
}
